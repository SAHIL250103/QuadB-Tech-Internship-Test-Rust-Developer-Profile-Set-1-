use std::io;

fn longest_common_prefix(strings: &[String]) -> String {
    if strings.is_empty() {
        return String::new();
    }
    
    let first_str = &strings[0];
    let mut prefix = String::new();
    
    'outer: for (i, ch) in first_str.chars().enumerate() {
        for string in &strings[1..] {
            if let Some(c) = string.chars().nth(i) {
                if c != ch {
                    break 'outer;
                }
            } else {
                break 'outer;
            }
        }
        prefix.push(ch);
    }
    
    prefix
}

fn main() {
    println!("Enter a set of strings separated by spaces:");

    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");

    let strings: Vec<String> = input
        .trim()
        .split_whitespace()
        .map(|s| String::from(s))
        .collect();

    let lcp = longest_common_prefix(&strings);
    println!("Longest common prefix: {}", lcp);
}
